/* Generated By:JJTree&JavaCC: Do not edit this line. CMMParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CMMParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOL = 8;
  /** RegularExpression Id. */
  int CHAR = 9;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int FLOAT = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int FOR = 15;
  /** RegularExpression Id. */
  int BREAK = 16;
  /** RegularExpression Id. */
  int CONTINUE = 17;
  /** RegularExpression Id. */
  int RETURN = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int LP = 21;
  /** RegularExpression Id. */
  int RP = 22;
  /** RegularExpression Id. */
  int LEFTSQUARE = 23;
  /** RegularExpression Id. */
  int RIGHTSQUARE = 24;
  /** RegularExpression Id. */
  int LEFTBRACE = 25;
  /** RegularExpression Id. */
  int RIGHTBRACE = 26;
  /** RegularExpression Id. */
  int PLUS = 27;
  /** RegularExpression Id. */
  int MINUS = 28;
  /** RegularExpression Id. */
  int MULTIPLY = 29;
  /** RegularExpression Id. */
  int DIVIDE = 30;
  /** RegularExpression Id. */
  int LESSTHAN = 31;
  /** RegularExpression Id. */
  int GREATERTHAN = 32;
  /** RegularExpression Id. */
  int ASSIGN = 33;
  /** RegularExpression Id. */
  int LESSEQUAL = 34;
  /** RegularExpression Id. */
  int GREATEREQUAL = 35;
  /** RegularExpression Id. */
  int EQUAL = 36;
  /** RegularExpression Id. */
  int DIFFERENT = 37;
  /** RegularExpression Id. */
  int COMMA = 38;
  /** RegularExpression Id. */
  int SEMICOLON = 39;
  /** RegularExpression Id. */
  int LOGICOR = 40;
  /** RegularExpression Id. */
  int LOGICAND = 41;
  /** RegularExpression Id. */
  int SELFADD = 42;
  /** RegularExpression Id. */
  int SELFMINUS = 43;
  /** RegularExpression Id. */
  int Sign = 44;
  /** RegularExpression Id. */
  int INTEGER = 45;
  /** RegularExpression Id. */
  int SINGLE = 46;
  /** RegularExpression Id. */
  int LETTER = 47;
  /** RegularExpression Id. */
  int DIGIT = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"bool\"",
    "\"char\"",
    "\"int\"",
    "\"float\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"break\"",
    "\"continue\"",
    "\"return\"",
    "\"true\"",
    "\"false\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<\"",
    "\">\"",
    "\"=\"",
    "\"<=\"",
    "\" >=\"",
    "\"==\"",
    "\"!=\"",
    "\",\"",
    "\";\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "<Sign>",
    "<INTEGER>",
    "<SINGLE>",
    "<LETTER>",
    "<DIGIT>",
    "\"print\"",
    "\"scan\"",
  };

}
